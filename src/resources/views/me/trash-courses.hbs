{{!-- Ban đầu là thẻ div, đến bài checkbox all đổi thành form, hoặc tạo thêm form ôm dữ liệu trong checkbox cũng đc, chỉ cần bọc lại các phần checkbox là đc --}}
{{!-- Nút btn-check-all-submit nhớ để là button chứ k phải div thì nó sẽ tự submit form với method GET với nhiều query là các value của checkbox (tức courseId) --}}
<form class='mt-4' name="container-form" method="post" action='/courses/handle-form-actions-trash'>
    <div>
        <a href='/me/stored/courses'>Danh sách khóa học</a>
        <h3>Khóa học đã xóa</h3>

        <div class="mt-4 d-flex align-items-center">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="checkbox-all">
                <label class="form-check-label" for="checkbox-all">
                    Chọn tất cả
                </label>
            </div>

            <select class="form-select form-select-sm checkbox-select-all-options" name="action" required>
                <option value="" selected>--Chọn hành động--</option> {{!-- selected là luôn chọn, còn k có nó sẽ chọn option đầu tiên. Thêm value trống thì nó sẽ k lấy cái --Chọn hành động-- khi res.json(resq.body) cơ mà nếu thêm cùng selected lại k có tác dụng => giải pháp là sửa lại hàm .onsumit dưới chỗ js, và thêm required vào và nó sẽ bắt buộc chọn option có value (rỗng k tính) --}}
                <option value="restore">Khôi phục</option>
            </select>
            {{!-- disabled ở đây là class của bootstrap nó css giao diện, đồng thời từ bs5 đã thêm pointer-events: none nên k cần sửa như video fixbug: https://youtu.be/dBZsgn1yzog --}}
            {{!-- Như video thì sẽ phải bỏ class disabled đi và thêm vào attribute là disabled (attribute nhé k phải class, có thể viết disabled="disabled") --}}
            <button class="btn btn-primary btn-sm btn-check-all-submit disabled">Thực hiện</button> {{!-- Khi nào select mới bỏ disabled --}}
        </div>
    </div>

    <table class='table'>
        <thead>
            <tr>
                <th scope='col'>#</th>
                <th scope='col'>Tên khóa học</th>
                <th scope='col'>Trình độ</th>
                <th scope='col' colspan='2'>Thời gian xóa</th>
                {{! Thẻ th trống để khớp với thẻ td chứa 2 thẻ a bên dưới, hoặc thêm attr colspan="2" cho th cuối }}
            </tr>
        </thead>
        <tbody>
            {{#each courses}}
                <tr>
                    <td>
                        <div class="form-check">
                            {{! Chú ý phần name để số nhiều và có [] để hiểu dù chọn 0, 1 hay nhiều nó vẫn luôn là mảng, nếu k có lúc là 1 value lúc là mảng dễ lỗi. Nữa là k để id vì nút này lặp cho các phần tử}}
                            <input class="form-check-input" type="checkbox" value="{{this._id}}" name="courseIds[]">
                        </div>
                    </td>

                    {{! @key với object, ở đây index từ 0, k thể + 1 hay ++ được đâu: https://handlebarsjs.com/guide/#custom-helpers }}
                    {{! thêm custom helpers ở src/index.js, cách dùng tên function param1 param2 }}
                    <th scope='row'>{{sum @index 1}}</th>
                    <td>{{this.name}}</td>
                    <td>{{this.level}}</td>
                    <td>@{{this.deletedAt}}</td>
                    <td>
                        <a href='#' class='btn btn-link btn-restore' data-id='{{this._id}}'>Khôi phục</a>
                        <a
                            href=''
                            class='btn btn-link'
                            data-bs-toggle='modal'
                            data-bs-target='#force-delete-course-modal'
                            data-id='{{this._id}}' {{!-- nhớ truyền id vào còn biết lối obj nào --}}
                        >Xóa vĩnh viễn</a>
                    </td>
                </tr>

            {{else}}
                {{! Nếu courses rỗng }}
                <tr>
                    <td colspan='5' class='text-center'>
                        Thùng rác trống
                    </td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</form>

<form name="force-delete-course-form" method='post'></form>
<form name="restore-course-form" method='post'></form>

{{! Modal confirm delete courses }}
<div class='modal' id='force-delete-course-modal' tabindex='-1'>
    <div class='modal-dialog'>
        <div class='modal-content'>
            <div class='modal-header'>
                <h5 class='modal-title'>Xóa khóa học?</h5>
                <button
                    type='button'
                    class='btn-close'
                    data-bs-dismiss='modal'
                    aria-label='Close'
                ></button>
            </div>
            <div class='modal-body'>
                <p>Bạn chắc chắn muốn xóa khóa học này chứ? Không thể khôi phục lại sau khi xóa vĩnh viễn!</p>
            </div>
            <div class='modal-footer'>
                <button type='button' class='btn btn-danger btn-confirm-delete-course'>Xóa vĩnh viễn</button>
                <button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Hủy</button>
            </div>
        </div>
    </div>
</div>

<script>
    //  ********** Phần restore ************** 
    // Lấy restore-course-form
    const restoreForm = document.forms['restore-course-form'];

    // Truyền courseId (lấy từ attr) vào action restoreForm:
    const restoredBtns = document.querySelectorAll('.btn-restore'); // nhiều nút, nhớ qs thì . trước class :<
    restoredBtns.forEach(btn => {
        btn.onclick = function(e) {
            e.preventDefault(); // vì click vào thẻ a nên nó sẽ nhận chuyển trang (rỗng thì reload nên phải chặn)

            // Chú ý quan trọng là nếu phần onclick này mà dùng arrow func là this thành window, nó k có context -> dùng arrow thì truyền e.target hoặc relatedTarget như bên dưới
            // console.log(this.dataset.id); // courseId bằng dataset.id hoặc getAttribute('data-id')

            restoreForm.action = '/courses/' + this.dataset.id + '/restore?_method=PATCH'; // Chú ý đuôi restore vì copy từ file stored-courses nó k có đuôi /restore mà chỉ có /:id là dừng thôi, và đuôi truy vấn ?_method=PATCH luôn ở cuối đường dẫn nhé -> lúc code loay hoay mãi mới biết :<
            restoreForm.submit(); // nhớ submit, thiếu lúc làm rồi :D
        }
    })

    //  ********** Phần forceDelete: chỉnh sửa nhiều chỗ so với delete thường, chủ yếu là tên gọi ************** 
    // Lấy modal xác nhận xóa force 
    const forceDeleteCourseModal = document.getElementById('force-delete-course-modal');

    // Lấy force-delete-course-form
    const forceDeleteForm = document.forms['force-delete-course-form'];

    // Bắt sự kiện khi bật: muốn lấy ra id của khóa bị xóa => Vẫn cách cũ dùng sự kiện bật modal xem nút nào (trong số nhiều nút delete) đã bật, rồi truy ra nút đó và lấy id khóa học trong nút đó -> có thể dùng forEach rồi onlick như restore bên trên nhanh hơn
    let courseId;
    forceDeleteCourseModal.addEventListener('show.bs.modal', event => {
        // Lấy nút đã bấm để hiện lên modal (nút xóa của khóa học), dùng event.target cũng đc sao ấy
        const button = event.relatedTarget;
        // Lấy attr id của nút xóa của khóa học
        courseId = button.getAttribute('data-id'); // hoặc element.dataset.id
        // console.log(courseId)
    })

    // Lấy được id rồi thì truyền vào action forceDeleteForm:
    // Lấy nút xác nhận xóa ở modal: lâu k dùng qS phải nhớ . đầu class nhé :<
    const btnConfirmDeleteCourse = document.querySelector('.btn-confirm-delete-course');
    btnConfirmDeleteCourse.onclick = function() {
        // alert(courseId);
        forceDeleteForm.action = '/courses/' + courseId + '/force?_method=DELETE';
        forceDeleteForm.submit(); // sau khi set form xong thì submit thôi, dùng event thay vì btn type submit
    }

    // ********** Phần checkbox-all: https://youtu.be/YilPrQiKOfE, copy từ phần stored-courses sang!
    const checkboxAll = document.querySelector('#checkbox-all');
    const courseItemCheckbox = document.querySelectorAll('input[name="courseIds[]"]'); // Lấy checkbox của các khóa học bằng qSA kết hợp selector attr, return NodeList
    const checkAllSubmitBtn = document.querySelector('.btn-check-all-submit');
    const containerForm = document.forms['container-form']; // truyền theo name hoặc id

    // checkboxAll onclick, onchange hay oninput đều hoạt động nhé
    checkboxAll.oninput = function() {
        const isCheckAll = this.checked; // hoặc this.matches(':checked'), làm trong validation ở JSBasic rồi ấy
        courseItemCheckbox.forEach( eachItem => eachItem.checked = isCheckAll); // vầy cho gọn
        renderCheckAllSubmitBtn();
    }

    // checkbox each onclick, onchange hay oninput 
    courseItemCheckbox.forEach( eachItem => {
        eachItem.onchange = function() {
            const isCheckAll = courseItemCheckbox.length === document.querySelectorAll('input[name="courseIds[]"]:checked').length;
            checkboxAll.checked = isCheckAll; // vầy cho gọn khỏi if else
            renderCheckAllSubmitBtn();
        }
    })

    // toggle disabled cho nút Thực hiện (submit): chỉ khi checked ít nhất 1 checkbox thì mới bỏ disabled
    function renderCheckAllSubmitBtn() {
        const hasChecked = document.querySelectorAll('input[name="courseIds[]"]:checked').length > 0;
        checkAllSubmitBtn.classList.toggle('disabled', !hasChecked); // nếu hasChecked = true thì remove, else ...
    }

    // form submit (chú ý onsubmit của form k phải của nút button submit đâu, cơ mà thử button vẫn đúng): nút submit chỉ click đc khi bỏ disable
    containerForm.onsubmit = function(e) {
        const isSubmitable = !checkAllSubmitBtn.classList.contains('disabled'); // nếu nó k có disable tức ấn được thì là có thể submit
        if (!isSubmitable) {
            e.preventDefault(); // mặc định submit với method GET (tức chuyển hướng nma do k có action nên nó đến trang hiện tại - tức reload page)
                                // Ngăn submit, chỉ khi submit đc (bỏ disable <-> có checked mới submit với dạng post)
                                // pointer-events: none; đã được thêm vào khi có class disable rồi (từ bootstrap 5) nên về mặc logic vẫn đúng và k bị lỗi như video fixbug: https://youtu.be/dBZsgn1yzog
        } // else submit theo những gì đã config
    }
</script> 